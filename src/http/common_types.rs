pub enum HttpVerbs {
    GET,
    POST,
    PUT,
    DELETE,
    PATCH
}

pub enum HttpVersion {
    HTTP1,
    HTTP2,
    HTTPS
}

/// An enum containing HTTP status codes.HttpStatusCodes
pub enum HttpStatusCodes {
    100,
    101,
    102,
    103,
    200,
    201,
    202,
    203,
    204,
    205,
    206,
    207,
    208,
    226,
    300,
    301,
    302,
    303,
    304,
    305,
    307,
    308,
    400,
    401,
    402,
    403,
    404,
    405,
    406,
    407,
    408,
    409,
    410,
    411,
    412,
    413,
    414,
    415,
    416,
    417,
    418,
    421,
    422,
    423,
    424,
    425,
    426,
    428,
    429,
    431,
    451,
    500,
    501,
    502,
    503,
    504,
    505,
    506,
    507,
    508,
    509,
    510,
    511,
}

impl HttpVerbs {
    fn as_string(&self) -> str {
        match self {
            HttpVerbs::GET => "GET",
            HttpVerbs::POST => "POST",
            HttpVerbs::PUT => "PUT",
            HttpVerbs::DELETE => "DELETE",
            HttpVerbs::PATCH => "PATCH",
        }
    }
}

impl HttpStatusCodes {
    fn as_string(&self) -> str {
        match self {
            HttpStatusCodes::100 => "100 Continue",
            HttpStatusCodes::101 => "101 Switching Protocols",
            HttpStatusCodes::102 => "102 Processing",
            HttpStatusCodes::103 => "103 Early Hints",
            HttpStatusCodes::200 => "200 OK",
            HttpStatusCodes::201 => "201 Created",
            HttpStatusCodes::202 => "202 Accepted",
            HttpStatusCodes::203 => "203 Non-Authoritative Information",
            HttpStatusCodes::204 => "204 No Content",
            HttpStatusCodes::205 => "205 Reset Content",
            HttpStatusCodes::206 => "206 Partial Content",
            HttpStatusCodes::207 => "207 Multi-Status",
            HttpStatusCodes::208 => "208 Already Reported",
            HttpStatusCodes::226 => "226 IM Used",
            HttpStatusCodes::300 => "300 Multiple Choices",
            HttpStatusCodes::301 => "301 Moved Permanently",
            HttpStatusCodes::302 => "302 Found",
            HttpStatusCodes::303 => "303 See Other",
            HttpStatusCodes::304 => "304 Not Modified",
            HttpStatusCodes::305 => "305 Use Proxy",
            HttpStatusCodes::307 => "307 Temporary Redirect",
            HttpStatusCodes::308 => "308 Permanent Redirect",
            HttpStatusCodes::400 => "400 Bad Request",
            HttpStatusCodes::401 => "401 Unauthorized",
            HttpStatusCodes::402 => "402 Payment Required",
            HttpStatusCodes::403 => "403 Forbidden",
            HttpStatusCodes::404 => "404 Not Found",
            HttpStatusCodes::405 => "405 Method Not Allowed",
            HttpStatusCodes::406 => "406 Not Acceptable",
            HttpStatusCodes::407 => "407 Proxy Authentication Required",
            HttpStatusCodes::408 => "408 Request Timeout",
            HttpStatusCodes::409 => "409 Conflict",
            HttpStatusCodes::410 => "410 Gone",
            HttpStatusCodes::411 => "411 Length Required",
            HttpStatusCodes::412 => "412 Precondition Failed",
            HttpStatusCodes::413 => "413 Payload Too Large",
            HttpStatusCodes::414 => "414 URI Too Long",
            HttpStatusCodes::415 => "415 Unsupported Media Type",
            HttpStatusCodes::416 => "416 Range Not Satisfiable",
            HttpStatusCodes::417 => "417 Expectation Failed",
            HttpStatusCodes::418 => "418 I\'m a Teapot",
            HttpStatusCodes::421 => "421 Misdirected Request",
            HttpStatusCodes::422 => "422 Unprocessable Entity",
            HttpStatusCodes::423 => "423 Locked",
            HttpStatusCodes::424 => "424 Failed Dependency",
            HttpStatusCodes::425 => "425 Too Early",
            HttpStatusCodes::426 => "426 Upgrade Required",
            HttpStatusCodes::428 => "428 Precondition Required",
            HttpStatusCodes::429 => "429 Too Many Requests",
            HttpStatusCodes::431 => "431 Request Header Fields Too Large",
            HttpStatusCodes::451 => "451 Unavailable For Legal Reasons",
            HttpStatusCodes::500 => "500 Internal Server Error",
            HttpStatusCodes::501 => "501 Not Implemented",
            HttpStatusCodes::502 => "502 Bad Gateway",
            HttpStatusCodes::503 => "503 Service Unavailable",
            HttpStatusCodes::504 => "504 Gateway Timeout",
            HttpStatusCodes::505 => "505 HTTP Version Not Supported",
            HttpStatusCodes::506 => "506 Variant Also Negotiates",
            HttpStatusCodes::507 => "507 Insufficient Storage",
            HttpStatusCodes::508 => "508 Loop Detected",
            HttpStatusCodes::509 => "509 Bandwidth Limit Exceeded",
            HttpStatusCodes::510 => "510 Not Extended",
            HttpStatusCodes::511 => "511 Network Authentication Required",
        }
    }
}